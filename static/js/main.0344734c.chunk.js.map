{"version":3,"sources":["base.js","Auth.js","Home.js","Login.js","NameGenerator.js","SignUp.js","PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","firebase","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","useEffect","auth","onAuthStateChanged","newUser","database","ref","uid","on","snapshot","console","log","val","data","Provider","value","withRouter","useContext","name","onClick","signOut","history","handleLogin","useCallback","event","a","preventDefault","target","elements","email","password","signInWithEmailAndPassword","push","alert","to","onSubmit","type","placeholder","firstNames","secondNames","generateGoatName","firstName","Math","floor","random","length","secondName","handleSignUp","createUserWithEmailAndPassword","result","user","set","PrivateRoute","RouteComponent","component","rest","render","routeProps","App","exact","path","Home","Login","SignUp","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8RAsBMA,G,YAlBa,CACjBC,OAAQC,0CACRC,WAAYD,4BACZE,YAAaF,mCACbG,UAAWH,YACXI,cAAeJ,GACfK,kBAAmBL,eACnBM,MAAON,8CAgBMO,EAFHC,gBAAuBV,G,QCnBtBW,EAAcC,IAAMC,gBAEpBC,EAAe,SAAC,GAEtB,IADLC,EACI,EADJA,SACI,EACkCC,mBAAS,MAD3C,mBACGC,EADH,KACgBC,EADhB,KAsBJ,OAnBAC,qBAAU,WAgBRV,EAAIW,OAAOC,oBAfK,SAACC,GACXA,EACFb,EAAIc,WAAWC,IAAI,SAAWF,EAAQG,KAAKC,GAAG,SAAS,SAACC,GACtDC,QAAQC,IAAR,mBAAwBP,EAAQG,MAChCG,QAAQC,IAAR,wBAA6BF,EAASG,QACtC,IAAMC,EAAOJ,EAASG,MACtBZ,EAAe,CACbI,UACAS,YAIJb,EAAe,WAIlB,IAGD,kBAACP,EAAYqB,SAAb,CACEC,MAAO,CACLhB,gBAGDF,ICXQmB,eAhBF,WAAO,IAEhBjB,EACEkB,qBAAWxB,GADbM,YAEF,OACE,oCACE,iDAAuBA,EAAYc,KAAKK,MAD1C,IACqD,4BAC9CC,QACL,WACE5B,EAAIW,OAAOkB,YAHsC,cADrD,Q,wBC8BWJ,eAzCD,SAAC,GAAiB,IAAfK,EAAc,EAAdA,QACTC,EAAcC,sBAAW,uCAC7B,WAAMC,GAAN,mBAAAC,EAAA,6DACED,EAAME,iBADR,EAE8BF,EAAMG,OAAOC,SAAjCC,EAFV,EAEUA,MAAOC,EAFjB,EAEiBA,SAFjB,kBAIUvC,EACHW,OACA6B,2BAA2BF,EAAMd,MAAOe,EAASf,OANxD,OAOIM,EAAQW,KAAK,KAPjB,gDASIC,MAAM,EAAD,IATT,yDAD6B,sDAa7B,CAACZ,IAKH,OAFwBJ,qBAAWxB,GAA3BM,YAGC,kBAAC,IAAD,CAAUmC,GAAG,MAIpB,6BACE,sCACA,0BAAMC,SAAUb,GACd,uCAEE,2BAAOJ,KAAK,QAAQkB,KAAK,QAAQC,YAAY,WAE/C,0CAEE,2BAAOnB,KAAK,WAAWkB,KAAK,WAAWC,YAAY,cAErD,4BAAQD,KAAK,UAAb,eCxCFE,EAAa,CACjB,SACA,aACA,QACA,YACA,UACA,QACA,WACA,cACA,SACA,aACA,UACA,cACA,YACA,OACA,gBACA,YACA,aACA,OACA,YACA,YACA,WACA,QACA,aACA,UACA,YACA,aACA,UACA,UACA,YACA,YACA,UACA,YACA,aACA,WACA,aACA,SACA,SACA,QACA,UACA,QACA,SACA,MACA,cACA,WACA,OACA,QACA,SACA,UACA,WACA,UACA,cACA,WACA,aACA,OACA,OACA,QACA,SACA,SACA,UACA,SACA,SACA,YACA,SACA,YACA,OACA,aACA,UACA,YACA,OACA,SACA,WACA,UACA,aACA,MACA,UACA,WACA,WACA,UACA,gBACA,SACA,YACA,SACA,WACA,MACA,WACA,QACA,SACA,cACA,WACA,YACA,QACA,WACA,SACA,SACA,YACA,QACA,cACA,SACA,YACA,cAIIC,EAAc,CAClB,YACA,gBACA,cACA,YACA,SACA,cACA,OACA,UACA,WACA,UACA,cACA,SACA,UACA,YACA,UACA,SACA,WACA,OACA,OACA,OACA,MACA,QACA,YACA,UACA,QACA,cACA,QACA,UACA,WACA,WACA,YACA,UACA,OACA,YACA,gBACA,WACA,OACA,UACA,WACA,WACA,WACA,SACA,MACA,SACA,WACA,SACA,SACA,YACA,cACA,QACA,QACA,YACA,aACA,QACA,YACA,UACA,UACA,UACA,UACA,MACA,SACA,YACA,QACA,gBACA,QACA,YACA,YACA,OACA,cACA,UACA,UACA,SACA,SACA,QACA,SACA,QACA,WACA,OACA,WACA,YACA,UACA,WACA,YACA,UACA,SACA,aACA,OACA,WACA,gBACA,WACA,aACA,UACA,QACA,aACA,eACA,QACA,UACA,SACA,SACA,WACA,cACA,OACA,UACA,QACA,gBACA,eACA,QACA,QACA,YACA,SAUaC,MANf,WACE,IAAIC,EAAYH,EAAWI,KAAKC,MAAMD,KAAKE,SAAWN,EAAWO,SAC7DC,EAAaP,EAAYG,KAAKC,MAAMD,KAAKE,SAAWL,EAAYM,SACpE,MAAM,GAAN,OAAUJ,EAAV,YAAuBK,ICzKV9B,eA3CA,SAAC,GAET,IADLK,EACI,EADJA,QAEM0B,EAAexB,sBAAW,uCAAC,WAAMC,GAAN,qBAAAC,EAAA,6DAC/BD,EAAME,iBADyB,EAK3BF,EAAMG,OAAOC,SAFfC,EAH6B,EAG7BA,MACAC,EAJ6B,EAI7BA,SAJ6B,kBAORvC,EAClBW,OACA8C,+BAA+BnB,EAAMd,MAAOe,EAASf,OAT3B,OAOvBkC,EAPuB,OAU7BvC,QAAQC,IAAIsC,GAEZ1D,EAAIc,WAAWC,IAAI,SAAW2C,EAAOC,KAAK3C,KAAK4C,IAAI,CACjDjC,KAAMsB,MAGRnB,EAAQW,KAAK,KAhBgB,kDAkB7BC,MAAM,EAAD,IAlBwB,0DAAD,sDAoB7B,CAACZ,IAEJ,OACE,6BACE,uCACA,0BAAMc,SAAUY,GACd,uCAEE,2BAAO7B,KAAK,QAAQkB,KAAK,QAAQC,YAAY,WAE/C,0CAEE,2BAAOnB,KAAK,WAAWkB,KAAK,WAAWC,YAAY,cAErD,4BAAQD,KAAK,UAAb,gB,QCzBOgB,EAjBM,SAAC,GAA4C,IAA/BC,EAA8B,EAAzCC,UAA8BC,EAAW,6BACxDxD,EAAekB,qBAAWxB,GAA1BM,YACP,OACE,kBAAC,IAAD,iBACMwD,EADN,CAEEC,OAAQ,SAAAC,GAAU,OACd1D,EACA,kBAACsD,EAAmBI,GAEpB,kBAAC,IAAD,CAAUvB,GAAI,gBCUTwB,EAdH,WACV,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,CAAcC,OAAK,EAACC,KAAK,IAAIN,UAAWO,IACxC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAASN,UAAWQ,IACtC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,UAAUN,UAAWS,QCJ7BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASb,OAAO,kBAAC,EAAD,MAASc,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.0344734c.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst prodConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_PROD_APP_ID,\n};\nconst devConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_DEV_APP_ID,\n};\nconst config =\n  process.env.NODE_ENV === 'production' ? prodConfig : devConfig;\n\nconst app = firebase.initializeApp(config);\n\nexport default app;\n","import React, {\n  useEffect,\n  useState\n} from \"react\";\nimport app from \"./base.js\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({\n  children\n}) => {\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    const setUser = (newUser) => {\n      if (newUser) {\n        app.database().ref('goats/' + newUser.uid).on('value', (snapshot) => {\n          console.log(`new user ${newUser.uid}`);\n          console.log(`got user data ${snapshot.val()}`);\n          const data = snapshot.val();\n          setCurrentUser({\n            newUser,\n            data,\n          });\n        });\n      } else {\n        setCurrentUser(null);\n      }\n    };\n    app.auth().onAuthStateChanged(setUser);\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, {\n  useContext\n} from \"react\";\nimport {\n  withRouter\n} from \"react-router\";\nimport app from \"./base\";\nimport {\n  AuthContext\n} from \"./Auth\";\n\nconst Home = () => {\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  return (\n    <>\n      <h1>Your goat name is {currentUser.data.name}</h1> <\n    button onClick = {\n      () => {\n        app.auth().signOut();\n      }\n    } > Sign out < /button> < / >\n  );\n\n};\n\nexport default withRouter(Home);\n","import React, { useCallback, useContext } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport app from \"./base.js\";\nimport { AuthContext } from \"./Auth.js\";\n\nconst Login = ({ history }) => {\n  const handleLogin = useCallback(\n    async event => {\n      event.preventDefault();\n      const { email, password } = event.target.elements;\n      try {\n        await app\n          .auth()\n          .signInWithEmailAndPassword(email.value, password.value);\n        history.push(\"/\");\n      } catch (error) {\n        alert(error);\n      }\n    },\n    [history]\n  );\n\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div>\n      <h1>Log in</h1>\n      <form onSubmit={handleLogin}>\n        <label>\n          Email\n          <input name=\"email\" type=\"email\" placeholder=\"Email\" />\n        </label>\n        <label>\n          Password\n          <input name=\"password\" type=\"password\" placeholder=\"Password\" />\n        </label>\n        <button type=\"submit\">Log in</button>\n      </form>\n    </div>\n  );\n};\n\nexport default withRouter(Login);\n","const firstNames = [\n  \"scared\",\n  \"electronic\",\n  \"known\",\n  \"important\",\n  \"federal\",\n  \"every\",\n  \"friendly\",\n  \"significant\",\n  \"global\",\n  \"impressive\",\n  \"several\",\n  \"traditional\",\n  \"desperate\",\n  \"poor\",\n  \"psychological\",\n  \"wonderful\",\n  \"reasonable\",\n  \"weak\",\n  \"technical\",\n  \"dangerous\",\n  \"dramatic\",\n  \"angry\",\n  \"successful\",\n  \"logical\",\n  \"different\",\n  \"additional\",\n  \"foreign\",\n  \"willing\",\n  \"emotional\",\n  \"immediate\",\n  \"popular\",\n  \"confident\",\n  \"sufficient\",\n  \"critical\",\n  \"impossible\",\n  \"hungry\",\n  \"decent\",\n  \"basic\",\n  \"massive\",\n  \"alive\",\n  \"united\",\n  \"old\",\n  \"educational\",\n  \"pleasant\",\n  \"cute\",\n  \"inner\",\n  \"asleep\",\n  \"various\",\n  \"informal\",\n  \"obvious\",\n  \"intelligent\",\n  \"accurate\",\n  \"historical\",\n  \"used\",\n  \"tall\",\n  \"legal\",\n  \"strong\",\n  \"former\",\n  \"typical\",\n  \"mental\",\n  \"lonely\",\n  \"conscious\",\n  \"unfair\",\n  \"obviously\",\n  \"tiny\",\n  \"electrical\",\n  \"similar\",\n  \"realistic\",\n  \"nice\",\n  \"actual\",\n  \"southern\",\n  \"nervous\",\n  \"suspicious\",\n  \"mad\",\n  \"capable\",\n  \"suitable\",\n  \"numerous\",\n  \"curious\",\n  \"comprehensive\",\n  \"severe\",\n  \"efficient\",\n  \"entire\",\n  \"cultural\",\n  \"hot\",\n  \"relevant\",\n  \"large\",\n  \"guilty\",\n  \"substantial\",\n  \"powerful\",\n  \"political\",\n  \"happy\",\n  \"pregnant\",\n  \"strict\",\n  \"afraid\",\n  \"practical\",\n  \"aware\",\n  \"responsible\",\n  \"wooden\",\n  \"expensive\",\n  \"consistent\",\n];\n\n\nconst secondNames = [\n  \"Clapboard\",\n  \"Counter-force\",\n  \"Interviewer\",\n  \"Machinery\",\n  \"Pulley\",\n  \"Resemblance\",\n  \"Risk\",\n  \"Species\",\n  \"Tortilla\",\n  \"Tugboat\",\n  \"Description\",\n  \"Endive\",\n  \"Lambkin\",\n  \"Obsession\",\n  \"Pretzel\",\n  \"Siding\",\n  \"Survival\",\n  \"Tart\",\n  \"Tool\",\n  \"Yawl\",\n  \"Jug\",\n  \"Kebab\",\n  \"Placement\",\n  \"Project\",\n  \"Prose\",\n  \"Prosecution\",\n  \"Quilt\",\n  \"Rostrum\",\n  \"Spelling\",\n  \"Struggle\",\n  \"Embossing\",\n  \"Freedom\",\n  \"Gyro\",\n  \"Hydrolyse\",\n  \"Perpendicular\",\n  \"Petition\",\n  \"Rent\",\n  \"Scanner\",\n  \"Souvenir\",\n  \"Vestment\",\n  \"Criteria\",\n  \"Forage\",\n  \"Fox\",\n  \"Mouton\",\n  \"Popsicle\",\n  \"Resume\",\n  \"Rubric\",\n  \"Speedboat\",\n  \"Spreadsheet\",\n  \"Tummy\",\n  \"Feast\",\n  \"Financing\",\n  \"Floodplain\",\n  \"Group\",\n  \"Moonshine\",\n  \"Raccoon\",\n  \"Romance\",\n  \"Runaway\",\n  \"Seminar\",\n  \"Tax\",\n  \"Advice\",\n  \"Brushfire\",\n  \"Crazy\",\n  \"Determination\",\n  \"Diner\",\n  \"Integrity\",\n  \"Invention\",\n  \"Leap\",\n  \"Performance\",\n  \"Perfume\",\n  \"Alcohol\",\n  \"Cornet\",\n  \"Flavor\",\n  \"Grant\",\n  \"Horror\",\n  \"Index\",\n  \"Numeracy\",\n  \"Sigh\",\n  \"Skylight\",\n  \"Transport\",\n  \"Eyeball\",\n  \"Illusion\",\n  \"Inflation\",\n  \"Invader\",\n  \"Maniac\",\n  \"Mayonnaise\",\n  \"Pith\",\n  \"Sprinter\",\n  \"Subcontractor\",\n  \"Tarragon\",\n  \"Attainment\",\n  \"Bribery\",\n  \"Coral\",\n  \"Derivative\",\n  \"Incompetence\",\n  \"Kayak\",\n  \"Outrage\",\n  \"Police\",\n  \"Quartz\",\n  \"Validate\",\n  \"Citizenship\",\n  \"Debt\",\n  \"Eyelids\",\n  \"Freak\",\n  \"Homosexuality\",\n  \"Practitioner\",\n  \"Realm\",\n  \"Surge\",\n  \"Underwire\",\n  \"Waist\",\n];\n\n\nfunction generateGoatName() {\n  var firstName = firstNames[Math.floor(Math.random() * firstNames.length)]\n  var secondName = secondNames[Math.floor(Math.random() * secondNames.length)]\n  return `${firstName} ${secondName}`\n}\n\nexport default generateGoatName\n\n","import React, {\n  useCallback\n} from \"react\";\nimport {\n  withRouter\n} from \"react-router\";\nimport app from \"./base.js\";\nimport generateGoatName from \"./NameGenerator.js\"\n\nconst SignUp = ({\n  history\n}) => {\n  const handleSignUp = useCallback(async event => {\n    event.preventDefault();\n    const {\n      email,\n      password\n    } = event.target.elements;\n    try {\n      const result = await app\n        .auth()\n        .createUserWithEmailAndPassword(email.value, password.value);\n      console.log(result);\n\n      app.database().ref('goats/' + result.user.uid).set({\n        name: generateGoatName(),\n      });\n\n      history.push(\"/\");\n    } catch (error) {\n      alert(error);\n    }\n  }, [history]);\n\n  return (\n    <div>\n      <h1>Sign up</h1>\n      <form onSubmit={handleSignUp}>\n        <label>\n          Email\n          <input name=\"email\" type=\"email\" placeholder=\"Email\" />\n        </label>\n        <label>\n          Password\n          <input name=\"password\" type=\"password\" placeholder=\"Password\" />\n        </label>\n        <button type=\"submit\">Sign Up</button>\n      </form>\n    </div>\n  );\n};\n\nexport default withRouter(SignUp);\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\n\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\n  const {currentUser} = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={routeProps =>\n        !!currentUser ? (\n          <RouteComponent {...routeProps} />\n        ) : (\n          <Redirect to={\"/login\"} />\n        )\n      }\n    />\n  );\n};\n\n\nexport default PrivateRoute","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport SignUp from \"./SignUp\";\nimport { AuthProvider } from \"./Auth\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <Router>\n        <div>\n          <PrivateRoute exact path=\"/\" component={Home} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/signup\" component={SignUp} />\n        </div>\n      </Router>\n    </AuthProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}